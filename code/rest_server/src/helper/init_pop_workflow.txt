initial population workflow

select midi file
select requested traits to be extracted
send requested traits to be extracted from midi file
send extracted traits to markov chain
markov chain generate population of size N based on extracted traits
    -IE for the number of requested individuals, have the markov chain
        run through the NEW population and create an individual
    -USED traits will not be discarded (for now) -- just re-use everything
markov chain send population to:
    -DB to be saved? (move to redis)   
    -fitness function to listen to song

def extract_traits(song, traits)
    for stream in song:
        for trait in stream.elements:
            if type(trait) in traits:
                yield( {type(trait) : trait.nameWithOctave, 'duration' : trait.duration.type} )

def create_markov(corpus):
    # corpus = string / file containing the info we want markovized
    yield(walk_corpus(corpus))

def walk_corpus(self, corpus, n_limit=5):
    chain = MarkovChain(n_limit)
    chain.add_sequence(corpus)        
    yield chain.walk()

def generate_initial_population(corpus, num_traits, num_indi):
    return [''.join([next(create_markov(corpus)) for k in xrange(num_traits)]) for ni in range(num_indi)]